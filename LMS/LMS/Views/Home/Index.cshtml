@model IEnumerable<LMS.Models.BookViewModel>

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>
        @Html.FontAwesome(FontAwesomeIconSet.Book)
        Library Management System
    </h1>
    <p class="lead">
        Library Management System is a software used to manages the catalog of a library. 
        This helps to keep the records of whole transactions of the books available in the library. 
        LMS is very easy to use and fulfills all the requirement of a librarian.
    </p>
    @*<p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>*@
</div>

<div class="row">
    <div class="col-md-4 text-center">
        @{int availableBooks = 0;}
        <h2>Available Books</h2>
        <table>
            @foreach (var item in Model)
            {
                if (item.IsAvailable)
                {
                    availableBooks++;
                    @Html.FontAwesome(FontAwesomeIconSet.Book)
                    @Html.DisplayFor(modelItem => item.Title)
                    <br />
                }
            }
        </table>
    </div>
    <div class="col-md-4 text-center">
        <div id="piechart"></div>
    </div>
    <div class="col-md-4 text-center">
        @{int borrowedBooks = 0;}
        <h2>Borrowed Books</h2>
        <table>
            @foreach (var item in Model)
            {
                if (!item.IsAvailable)
                {
                    borrowedBooks++;
                    @Html.FontAwesome(FontAwesomeIconSet.Book)
                    @Html.DisplayFor(modelItem => item.Title)
                    <br />
                }
            }
        </table>
    </div>
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    // Load google charts
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    // Draw the chart and set the chart values
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Books', 'Books'],
            ['Available', @availableBooks],
            ['Borrowed', @borrowedBooks]
        ]);


        // Optional; add a title and set the width and height of the chart
        var options = {
            'width': 450,
            'height': 400,
            is3D: true,
            pieSliceText: 'percentage'
        };

        // Display the chart inside the <div> element with id="piechart"
        var chart = new google.visualization.PieChart(document.getElementById('piechart'));
        chart.draw(data, options);
    }
</script>